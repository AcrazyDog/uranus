<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kingdee.uranus.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.kingdee.uranus.model.User">
		<id column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="user_account" property="userAccount" jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
		<result column="user_nickname" property="userNickname"
			jdbcType="VARCHAR" />
		<result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="user_status" property="userStatus" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="role_id" property="roleId" jdbcType="VARCHAR" />
		<result column="token" property="token" jdbcType="VARCHAR" />
		<result column="dmp_user_account" property="dmpUserAccount"
			jdbcType="VARCHAR" />
		<result column="dmp_user_id" property="dmpUserId" jdbcType="VARCHAR" />
		<!-- 关联属性 -->
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, user_account, user_password, user_nickname, mobile_phone, sex,
		user_status,
		create_time, update_time, role_id, token,dmp_user_account,dmp_user_id
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where user_id = #{userId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sys_user
		where user_id = #{userId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.kingdee.uranus.model.User">
		insert into sys_user (user_id, user_account, user_password,
		user_nickname, mobile_phone, sex,
		user_status, create_time, update_time,
		role_id, token,dmp_user_account,dmp_user_id)
		values (#{userId,jdbcType=VARCHAR}, #{userAccount,jdbcType=VARCHAR},
		#{userPassword,jdbcType=VARCHAR},
		#{userNickname,jdbcType=VARCHAR}, #{mobilePhone,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
		#{userStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},
		#{roleId,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{dmpUserAccount,jdbcType=VARCHAR},
		#{dmpUserId,jdbcType=VARCHAR})
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.kingdee.uranus.model.User">
		update sys_user
		<set>
			<if test="userAccount != null">
				user_account = #{userAccount,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userNickname != null">
				user_nickname = #{userNickname,jdbcType=VARCHAR},
			</if>
			<if test="mobilePhone != null">
				mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="userStatus != null">
				user_status = #{userStatus,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=VARCHAR},
			</if>
			<if test="token != null">
				token = #{token,jdbcType=VARCHAR},
			</if>
			<if test="dmpUserAccount != null">
				dmp_user_account = #{dmpUserAccount,jdbcType=VARCHAR},
			</if>
			<if test="dmpUserId != null">
				dmp_user_id = #{dmpUserId,jdbcType=VARCHAR},
			</if>
		</set>
		where user_id = #{userId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.kingdee.uranus.model.User">
		update sys_user
		set user_account = #{userAccount,jdbcType=VARCHAR},
		user_password = #{userPassword,jdbcType=VARCHAR},
		user_nickname = #{userNickname,jdbcType=VARCHAR},
		mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		user_status = #{userStatus,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		role_id = #{roleId,jdbcType=VARCHAR},
		token = #{token,jdbcType=VARCHAR}
		where user_id = #{userId,jdbcType=VARCHAR}
	</update>

	<select id="selectUserByAccount" resultMap="BaseResultMap">
		SELECT a.*,b.role_name FROM sys_user a LEFT JOIN sys_role b ON
		a.role_id=b.role_id WHERE a.user_account=#{userAccount}
	</select>

	<select id="selectByDmpAccount" resultMap="BaseResultMap">
		SELECT a.*,b.role_name FROM sys_user a LEFT JOIN sys_role b ON
		a.role_id=b.role_id WHERE a.dmp_user_account=#{userAccount}
	</select>

	<!-- 查询所有的user -->
	<select id="selectUsers" resultMap="BaseResultMap">
		SELECT a.*,b.role_name FROM sys_user a,sys_role b WHERE a.role_id =
		b.role_id
		<if test="status!=null">AND a.user_status=#{status} </if>
		<if
			test="searchKey!=null and searchKey!='' and searchValue!=null and searchValue!=''">AND a.${searchKey} like '%${searchValue}%' </if>
		ORDER BY a.create_time ASC
	</select>

	<select id="selectAllUsers" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"></include>
		FROM sys_user
	</select>
</mapper>